Configurer mon ID : git config --global user.name "jb"
Configurer mon mail : git config --global user.email mon@email.com
On peut changer les ID pour un projet en utilisant les commandes sans le --global.
https://openclassrooms.com/fr/courses/7162856-gerez-du-code-avec-git-et-github/7165721-installez-git-sur-votre-ordinateur

Créer un dossier : mkdir nomdossier
Aller dans le dossier : cd nomdossier
Initialiser : git init
Créer un fichier : touch nomfichier.extension

Indexer un fichier : git add
Enregistrer une nouvelle version d'un fichier : git commit //pour le message, finir par échap puis :x

Relier Git et GItHub : git remote add origin https://liendemonrepositery.git
Basculer de Master à main : git branch -M main
Envoyer la branche mère dans GitHub : git push -u origin main
Envoyer une autre branche : git push -u https://liendemonrepositery.git
Envoyer un commit : git push

Créer une branche : git branch nombranche
Supprimer une branche : git branch -d nombranche
Fusionner deux branches : git merge nomdelabrancheàfusionner

Mettre de côté des modifications (non commit): git stash
Voir les modifications de côté : git stash list
Récupérer des modifications : git stash aply IDstash

Lister les commit : git log
git refloggit reflog

Supprimer de la branche le dernier commit : git reset --hard HEAD^
Appliquer un commit : git reset --hard idcommit

Revenir au commit précédent : git revert HEAD

Modifier le message du dernier commit : git commit --amend -m "bon message"

Afficher les modifications et auteurs d'un fichier : git blame nomfichier

SYNCHRONISER DEUX PC avec un nouveau repo : 

git init 
git remote add origin git@github.com:Spt117/"nouveaurepo".git
# start the ssh-agent in the background
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/"nom du fichier contenant la clé"

git fetch
git pull origin "master ou main"